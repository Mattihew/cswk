package com.mattihew.cswk.programming2.model;

import java.util.Objects;

import com.mattihew.cswk.programming2.model.abstracts.Person;
import com.mattihew.cswk.programming2.view.TablePanel;

/**
 * This class represents a student within the system.
 * 
 * @author Matt Rayner
 */
public class Student extends Person implements Comparable<Student>
{
	/** Phone number of this student.*/
	private final String phone;
	
	/**
	 * Class Constructor.
	 *
	 * @param firstname the first name of this student.
	 * @param lastname the last name of this student.
	 * @param phone the phone number of this student.
	 */
	public Student(final String firstName, final String lastName, final String phone)
	{
		super(firstName, lastName);
		this.phone = phone;
	}
	
	/**
	 * Creates a student based on values read from a {@link TablePanel} table.
	 * 
	 * The parameters have to be in the same order as generated by {@link #toTableColumnValues()}.
	 * 
	 * @param values values read out of a {@link TablePanel} table.
	 * @return Student created from provided values.
	 */
	public static Student fromTableColumnValues(final Object[] values)
	{
		return new Student((String) values[0], (String) values[1], (String) values[2]);
	}
	
	/**
	 * Gets the phone number from this Student.
	 * 
	 * @return this student's phone number.
	 */
	public String getPhoneNum()
	{
		return this.phone;
	}
	
	/**
	 * {@inheritDoc}
	 *
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString()
	{
		return String.join("\n", super.toString(), this.phone);
	}
	
	/**
	 * {@inheritDoc}
	 *
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode()
	{
		return Objects.hash(super.hashCode(), this.phone);
	}
	
	/**
	 * {@inheritDoc}
	 *
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(final Object other)
	{
		boolean result;
		if(other == this)
		{
			result = true;
		}
		else if (!(other instanceof Student))
		{
			result = false;
		}
		else
		{
			final Student otherStudent = (Student) other;
			result = super.equals(otherStudent);
			result &= this.phone.equals(otherStudent.phone);
		}
		return result;
	}

	/**
	 * {@inheritDoc}
	 *
	 * @see java.lang.Comparable#compareTo(java.lang.Object)
	 */
	@Override
	public int compareTo(final Student anotherStudent)
	{
		int result = super.compareTo(anotherStudent);
		if (result != 0)
		{
			return result;
		}
		result = this.phone.compareTo(anotherStudent.phone);
		return result;
	}

	/**
	 * {@inheritDoc}
	 *
	 * @see com.mattihew.cswk.programming2.model.abstracts.Person#getValueAt(int)
	 */
	@Override
	public Object getValueAt(final int columnIndex)
	{
		if (columnIndex == super.getColumnCount())
		{
			return this.phone;
		}
		return super.getValueAt(columnIndex);
	}

	/**
	 * {@inheritDoc}
	 *
	 * @see com.mattihew.cswk.programming2.model.abstracts.Person#getColumnCount()
	 */
	@Override
	public int getColumnCount()
	{
		return super.getColumnCount() + 1;
	}
	
}
